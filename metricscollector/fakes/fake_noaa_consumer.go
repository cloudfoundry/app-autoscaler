// This file was generated by counterfeiter
package fakes

import (
	"autoscaler/metricscollector/noaa"
	"sync"

	"github.com/cloudfoundry/sonde-go/events"
)

type FakeNoaaConsumer struct {
	ContainerMetricsStub        func(appGuid string, authToken string) ([]*events.ContainerMetric, error)
	containerMetricsMutex       sync.RWMutex
	containerMetricsArgsForCall []struct {
		appGuid   string
		authToken string
	}
	containerMetricsReturns struct {
		result1 []*events.ContainerMetric
		result2 error
	}
	invocations      map[string][][]interface{}
	invocationsMutex sync.RWMutex
}

func (fake *FakeNoaaConsumer) ContainerMetrics(appGuid string, authToken string) ([]*events.ContainerMetric, error) {
	fake.containerMetricsMutex.Lock()
	fake.containerMetricsArgsForCall = append(fake.containerMetricsArgsForCall, struct {
		appGuid   string
		authToken string
	}{appGuid, authToken})
	fake.recordInvocation("ContainerMetrics", []interface{}{appGuid, authToken})
	fake.containerMetricsMutex.Unlock()
	if fake.ContainerMetricsStub != nil {
		return fake.ContainerMetricsStub(appGuid, authToken)
	} else {
		return fake.containerMetricsReturns.result1, fake.containerMetricsReturns.result2
	}
}

func (fake *FakeNoaaConsumer) ContainerMetricsCallCount() int {
	fake.containerMetricsMutex.RLock()
	defer fake.containerMetricsMutex.RUnlock()
	return len(fake.containerMetricsArgsForCall)
}

func (fake *FakeNoaaConsumer) ContainerMetricsArgsForCall(i int) (string, string) {
	fake.containerMetricsMutex.RLock()
	defer fake.containerMetricsMutex.RUnlock()
	return fake.containerMetricsArgsForCall[i].appGuid, fake.containerMetricsArgsForCall[i].authToken
}

func (fake *FakeNoaaConsumer) ContainerMetricsReturns(result1 []*events.ContainerMetric, result2 error) {
	fake.ContainerMetricsStub = nil
	fake.containerMetricsReturns = struct {
		result1 []*events.ContainerMetric
		result2 error
	}{result1, result2}
}

func (fake *FakeNoaaConsumer) Invocations() map[string][][]interface{} {
	fake.invocationsMutex.RLock()
	defer fake.invocationsMutex.RUnlock()
	fake.containerMetricsMutex.RLock()
	defer fake.containerMetricsMutex.RUnlock()
	return fake.invocations
}

func (fake *FakeNoaaConsumer) recordInvocation(key string, args []interface{}) {
	fake.invocationsMutex.Lock()
	defer fake.invocationsMutex.Unlock()
	if fake.invocations == nil {
		fake.invocations = map[string][][]interface{}{}
	}
	if fake.invocations[key] == nil {
		fake.invocations[key] = [][]interface{}{}
	}
	fake.invocations[key] = append(fake.invocations[key], args)
}

var _ noaa.NoaaConsumer = new(FakeNoaaConsumer)
